{
    "patches": [
        {
            "label": "2024-12-08_13-49-40",
            "content": "@@ -2022,41 +2022,8 @@\n ()%7B%0A\n-        if(pessoa != null) %7B%0A    \n     \n@@ -2074,28 +2074,24 @@\n e:%22%0A        \n-   \n- \n + this.time \n@@ -2126,114 +2126,8 @@\n %22; %0A\n-        %7D%0A%0A        return %22power:%22 + this.potencia + %22, time:%22%0A        + this.time + %22, person:(empty)%22; %0A\n     \n"
        },
        {
            "label": "2024-12-08_13-51-10",
            "content": "@@ -1865,36 +1865,8 @@\n ();%0A\n-        buzina.append(%22P%22);%0A\n     \n@@ -1951,36 +1951,8 @@\n   %7D%0A\n-        buzina.append(%22m%22);%0A\n     \n"
        },
        {
            "label": "2024-12-08_13-52-06",
            "content": "@@ -14,16 +14,2332 @@\n til.*;%0A%0A\n+class Pessoa %7B%0A    private String name;%0A    private int age;%0A%0A    public Pessoa(String name, int age) %7B%0A        this.name = name;%0A        this.age = age;%0A    %7D%0A%0A    public int getAge() %7B%0A        return age;%0A    %7D%0A%0A    public String getName() %7B%0A        return name;%0A    %7D%0A%0A    public String toString()%7B%0A        return getName()+ %22:%22 +getAge();%0A    %7D%0A%7D%0A%0Aclass Moto %7B%0A    private int potencia;%0A    private int time;%0A    private Pessoa pessoa;%0A%0A    public Moto(int power) %7B%0A        potencia = power;%0A    %7D%0A%0A    public boolean inserir(Pessoa pessoa) %7B%0A        if(this.pessoa != null) %7B%0A            System.out.println(%22fail: busy motorcycle%22);%0A            return false;%0A        %7D%0A        this.pessoa = pessoa;%0A        return true;%0A    %7D%0A%0A    public Pessoa remover() %7B%0A        if(pessoa != null) %7B%0A            Pessoa pessoaRemovida = pessoa;%0A            pessoa = null;%0A            return pessoaRemovida;%0A        %7D%0A%0A        System.out.println(%22fail: empty motorcycle%22);%0A        return null;%0A    %7D%0A%0A    public void buyTime(int time)%7B%0A        this.time += time;%0A    %7D%0A%0A    public void drive(int time) %7B%0A        if(this.time %3E 0) %7B%0A            if(pessoa != null) %7B%0A                if(pessoa.getAge() %3C 10) %7B%0A                    if(this.time - time %3C 0) %7B%0A                        System.out.println(%22fail: time finished after %22 + this.time + %22 minutes%22);%0A                        this.time = 0;%0A                        return;%0A                    %7D%0A                    this.time -= time;%0A                    return;%0A                %7D%0A                System.out.println(%22fail: too old to drive%22);%0A                return;%0A            %7D%0A            System.out.println(%22fail: empty motorcycle%22);%0A            return;%0A        %7D%0A        System.out.println(%22fail: buy time first%22);%0A    %7D%0A%0A    public String honk() %7B%0A        StringBuilder buzina = new StringBuilder();%0A        buzina.append(%22P%22);%0A        for(int i = 0; i %3C potencia; i++) %7B%0A            buzina.append(%22e%22);%0A        %7D%0A        buzina.append(%22m%22);%0A        return buzina.toString();%0A    %7D%0A%0A    public String toString()%7B%0A        if(pessoa != null) %7B%0A            return %22power:%22 + this.potencia + %22, time:%22%0A            + this.time + %22, person:(%22 + pessoa + %22)%22; %0A        %7D%0A%0A        return %22power:%22 + this.potencia + %22, time:%22%0A        + this.time + %22, person:(empty)%22; %0A    %7D%0A%7D%0A%0A\n class Ad\n"
        },
        {
            "label": "2024-12-09_13-54-42",
            "content": "@@ -55,16 +55,17 @@\n ew Moto(\n+1\n );%0A    p\n"
        },
        {
            "label": "2024-12-09_13-58-50",
            "content": "@@ -55,17 +55,16 @@\n ew Moto(\n-1\n );%0A    p\n"
        },
        {
            "label": "2024-12-09_13-59-47",
            "content": "import java.util.*;\n\nclass Adapter {\n    Moto moto = new Moto(1);\n    public void init(int power) {\n        moto = new Moto(power);\n    }\n\n    public void enter(String name, int age) {\n        moto.inserir(new Pessoa(name, age));\n    }\n\n    public void buy(int price) {\n        moto.buyTime(price);\n    }\n\n    public void drive(int km) {\n        moto.drive(km);\n    }\n    \n    public void leave() {\n        Pessoa person = moto.remover();\n        if (person == null) {\n             System.out.println(\"---\");\n            return;\n        }\n        System.out.println(person.toString());\n    }\n\n    public void honk() {\n        System.out.println(moto.honk());\n    }\n\n    public void show() {\n        System.out.println(moto.toString());\n    }\n}\n\n\npublic class Shell{\n    static Adapter adp = new Adapter();\n\n    public static void main(String[] args) {\n        while(true) {\n            write(\"$\");\n            String line = input();\n            args = line.split(\" \");\n            write(line + \"\\n\");\n            \n            if      (args[0].equals(\"end\"))      { break;                                       }\n            else if (args[0].equals(\"show\"))     { adp.show();                                  }\n            else if (args[0].equals(\"init\"))     { adp.init((int) number(args[1]));             }\n            else if (args[0].equals(\"enter\"))    { adp.enter(args[1], (int) number(args[2]));   }\n            else if (args[0].equals(\"buy\"))      { adp.buy((int) number(args[1]));              }\n            else if (args[0].equals(\"drive\"))    { adp.drive((int) number(args[1]));            }\n            else if (args[0].equals(\"honk\"))     { adp.honk();                                  }\n            else if (args[0].equals(\"leave\"))    { adp.leave();                                 }\n            else                                 { write(\"fail: comando invalido\\n\");       }\n        }\n    }\n\n    static Scanner scanner = new Scanner(System.in);\n    public static String input()            { return scanner.nextLine();      }\n    public static void write(String value)  { System.out.print(value);        }\n    public static double number(String str) { return Double.parseDouble(str); }\n}\n"
        }
    ]
}